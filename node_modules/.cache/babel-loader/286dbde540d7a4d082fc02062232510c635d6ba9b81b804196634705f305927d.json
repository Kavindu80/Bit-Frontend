{"ast":null,"code":"import { unpack, last } from '../../utils/index.js';\nconst {\n  round\n} = Math;\nconst rgb2hex = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  let [r, g, b, a] = unpack(args, 'rgba');\n  let mode = last(args) || 'auto';\n  if (a === undefined) a = 1;\n  if (mode === 'auto') {\n    mode = a < 1 ? 'rgba' : 'rgb';\n  }\n  r = round(r);\n  g = round(g);\n  b = round(b);\n  const u = r << 16 | g << 8 | b;\n  let str = '000000' + u.toString(16); //#.toUpperCase();\n  str = str.substr(str.length - 6);\n  let hxa = '0' + round(a * 255).toString(16);\n  hxa = hxa.substr(hxa.length - 2);\n  switch (mode.toLowerCase()) {\n    case 'rgba':\n      return \"#\".concat(str).concat(hxa);\n    case 'argb':\n      return \"#\".concat(hxa).concat(str);\n    default:\n      return \"#\".concat(str);\n  }\n};\nexport default rgb2hex;","map":{"version":3,"names":["unpack","last","round","Math","rgb2hex","_len","arguments","length","args","Array","_key","r","g","b","a","mode","undefined","u","str","toString","substr","hxa","toLowerCase","concat"],"sources":["C:/Users/kavin/Desktop/Azure/Bit-Frontend/node_modules/chroma-js/src/io/hex/rgb2hex.js"],"sourcesContent":["import { unpack, last } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2hex = (...args) => {\n    let [r, g, b, a] = unpack(args, 'rgba');\n    let mode = last(args) || 'auto';\n    if (a === undefined) a = 1;\n    if (mode === 'auto') {\n        mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round(r);\n    g = round(g);\n    b = round(b);\n    const u = (r << 16) | (g << 8) | b;\n    let str = '000000' + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    let hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n        case 'rgba':\n            return `#${str}${hxa}`;\n        case 'argb':\n            return `#${hxa}${str}`;\n        default:\n            return `#${str}`;\n    }\n};\n\nexport default rgb2hex;\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,sBAAsB;AACnD,MAAM;EAAEC;AAAM,CAAC,GAAGC,IAAI;AAEtB,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAa;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACpB,IAAI,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGd,MAAM,CAACQ,IAAI,EAAE,MAAM,CAAC;EACvC,IAAIO,IAAI,GAAGd,IAAI,CAACO,IAAI,CAAC,IAAI,MAAM;EAC/B,IAAIM,CAAC,KAAKE,SAAS,EAAEF,CAAC,GAAG,CAAC;EAC1B,IAAIC,IAAI,KAAK,MAAM,EAAE;IACjBA,IAAI,GAAGD,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,KAAK;EACjC;EACAH,CAAC,GAAGT,KAAK,CAACS,CAAC,CAAC;EACZC,CAAC,GAAGV,KAAK,CAACU,CAAC,CAAC;EACZC,CAAC,GAAGX,KAAK,CAACW,CAAC,CAAC;EACZ,MAAMI,CAAC,GAAIN,CAAC,IAAI,EAAE,GAAKC,CAAC,IAAI,CAAE,GAAGC,CAAC;EAClC,IAAIK,GAAG,GAAG,QAAQ,GAAGD,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACrCD,GAAG,GAAGA,GAAG,CAACE,MAAM,CAACF,GAAG,CAACX,MAAM,GAAG,CAAC,CAAC;EAChC,IAAIc,GAAG,GAAG,GAAG,GAAGnB,KAAK,CAACY,CAAC,GAAG,GAAG,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC;EAC3CE,GAAG,GAAGA,GAAG,CAACD,MAAM,CAACC,GAAG,CAACd,MAAM,GAAG,CAAC,CAAC;EAChC,QAAQQ,IAAI,CAACO,WAAW,CAAC,CAAC;IACtB,KAAK,MAAM;MACP,WAAAC,MAAA,CAAWL,GAAG,EAAAK,MAAA,CAAGF,GAAG;IACxB,KAAK,MAAM;MACP,WAAAE,MAAA,CAAWF,GAAG,EAAAE,MAAA,CAAGL,GAAG;IACxB;MACI,WAAAK,MAAA,CAAWL,GAAG;EACtB;AACJ,CAAC;AAED,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}