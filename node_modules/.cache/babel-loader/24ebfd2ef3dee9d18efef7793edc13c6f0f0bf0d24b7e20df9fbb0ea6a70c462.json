{"ast":null,"code":"import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\nclass Color {\n  constructor() {\n    const me = this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (type(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    }\n    // last argument could be the mode\n    let mode = last(args);\n    let autodetect = false;\n    if (!mode) {\n      autodetect = true;\n      if (!_input.sorted) {\n        _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n        _input.sorted = true;\n      }\n\n      // auto-detect format\n      for (let chk of _input.autodetect) {\n        mode = chk.test(...args);\n        if (mode) break;\n      }\n    }\n    if (_input.format[mode]) {\n      const rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    }\n    // add alpha channel\n    if (me._rgb.length === 3) me._rgb.push(1);\n  }\n  toString() {\n    if (type(this.hex) == 'function') return this.hex();\n    return \"[\".concat(this._rgb.join(','), \"]\");\n  }\n}\nexport default Color;","map":{"version":3,"names":["last","clip_rgb","type","_input","Color","constructor","me","_len","arguments","length","args","Array","_key","mode","autodetect","sorted","sort","a","b","p","chk","test","format","rgb","apply","slice","_rgb","Error","push","toString","hex","concat","join"],"sources":["C:/Users/kavin/Desktop/Azure/Bit-Frontend/node_modules/chroma-js/src/Color.js"],"sourcesContent":["import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\n\nclass Color {\n    constructor(...args) {\n        const me = this;\n        if (\n            type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor\n        ) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n        if (!mode) {\n            autodetect = true;\n\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n                _input.sorted = true;\n            }\n\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(\n                null,\n                autodetect ? args : args.slice(0, -1)\n            );\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: ' + args);\n        }\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n}\nexport default Color;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AACvD,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,KAAK,CAAC;EACRC,WAAWA,CAAA,EAAU;IACjB,MAAMC,EAAE,GAAG,IAAI;IAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADLC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAEf,IACIV,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC1BA,IAAI,CAAC,CAAC,CAAC,CAACL,WAAW,IACnBK,IAAI,CAAC,CAAC,CAAC,CAACL,WAAW,KAAK,IAAI,CAACA,WAAW,EAC1C;MACE;MACA,OAAOK,IAAI,CAAC,CAAC,CAAC;IAClB;IACA;IACA,IAAIG,IAAI,GAAGb,IAAI,CAACU,IAAI,CAAC;IACrB,IAAII,UAAU,GAAG,KAAK;IACtB,IAAI,CAACD,IAAI,EAAE;MACPC,UAAU,GAAG,IAAI;MAEjB,IAAI,CAACX,MAAM,CAACY,MAAM,EAAE;QAChBZ,MAAM,CAACW,UAAU,GAAGX,MAAM,CAACW,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC;QAC/DhB,MAAM,CAACY,MAAM,GAAG,IAAI;MACxB;;MAEA;MACA,KAAK,IAAIK,GAAG,IAAIjB,MAAM,CAACW,UAAU,EAAE;QAC/BD,IAAI,GAAGO,GAAG,CAACC,IAAI,CAAC,GAAGX,IAAI,CAAC;QACxB,IAAIG,IAAI,EAAE;MACd;IACJ;IACA,IAAIV,MAAM,CAACmB,MAAM,CAACT,IAAI,CAAC,EAAE;MACrB,MAAMU,GAAG,GAAGpB,MAAM,CAACmB,MAAM,CAACT,IAAI,CAAC,CAACW,KAAK,CACjC,IAAI,EACJV,UAAU,GAAGJ,IAAI,GAAGA,IAAI,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACxC,CAAC;MACDnB,EAAE,CAACoB,IAAI,GAAGzB,QAAQ,CAACsB,GAAG,CAAC;IAC3B,CAAC,MAAM;MACH,MAAM,IAAII,KAAK,CAAC,kBAAkB,GAAGjB,IAAI,CAAC;IAC9C;IACA;IACA,IAAIJ,EAAE,CAACoB,IAAI,CAACjB,MAAM,KAAK,CAAC,EAAEH,EAAE,CAACoB,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;EAC7C;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI3B,IAAI,CAAC,IAAI,CAAC4B,GAAG,CAAC,IAAI,UAAU,EAAE,OAAO,IAAI,CAACA,GAAG,CAAC,CAAC;IACnD,WAAAC,MAAA,CAAW,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,CAAC;EAClC;AACJ;AACA,eAAe5B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}