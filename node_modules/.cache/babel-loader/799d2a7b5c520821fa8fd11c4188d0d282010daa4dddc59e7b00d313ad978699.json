{"ast":null,"code":"import { unpack, last } from '../../utils/index.js';\nimport hsl2css from './hsl2css.js';\nimport rgb2hsl from '../hsl/rgb2hsl.js';\nimport lab2css from './lab2css.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lch2css from './lch2css.js';\nimport rgb2lch from '../lch/rgb2lch.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport oklab2css from './oklab2css.js';\nimport rgb2oklch from '../oklch/rgb2oklch.js';\nimport oklch2css from './oklch2css.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\nconst {\n  round\n} = Math;\n\n/*\n * supported arguments:\n * - rgb2css(r,g,b)\n * - rgb2css(r,g,b,a)\n * - rgb2css([r,g,b], mode)\n * - rgb2css([r,g,b,a], mode)\n * - rgb2css({r,g,b,a}, mode)\n */\nconst rgb2css = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  const rgba = unpack(args, 'rgba');\n  let mode = last(args) || 'rgb';\n  if (mode.substr(0, 3) === 'hsl') {\n    return hsl2css(rgb2hsl(rgba), mode);\n  }\n  if (mode.substr(0, 3) === 'lab') {\n    // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n    const prevWhitePoint = getLabWhitePoint();\n    setLabWhitePoint('d50');\n    const cssColor = lab2css(rgb2lab(rgba), mode);\n    setLabWhitePoint(prevWhitePoint);\n    return cssColor;\n  }\n  if (mode.substr(0, 3) === 'lch') {\n    // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n    const prevWhitePoint = getLabWhitePoint();\n    setLabWhitePoint('d50');\n    const cssColor = lch2css(rgb2lch(rgba), mode);\n    setLabWhitePoint(prevWhitePoint);\n    return cssColor;\n  }\n  if (mode.substr(0, 5) === 'oklab') {\n    return oklab2css(rgb2oklab(rgba));\n  }\n  if (mode.substr(0, 5) === 'oklch') {\n    return oklch2css(rgb2oklch(rgba));\n  }\n  rgba[0] = round(rgba[0]);\n  rgba[1] = round(rgba[1]);\n  rgba[2] = round(rgba[2]);\n  if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n    rgba[3] = '/ ' + (rgba.length > 3 ? rgba[3] : 1);\n    mode = 'rgba';\n  }\n  return \"\".concat(mode.substr(0, 3), \"(\").concat(rgba.slice(0, mode === 'rgb' ? 3 : 4).join(' '), \")\");\n};\nexport default rgb2css;","map":{"version":3,"names":["unpack","last","hsl2css","rgb2hsl","lab2css","rgb2lab","lch2css","rgb2lch","rgb2oklab","oklab2css","rgb2oklch","oklch2css","getLabWhitePoint","setLabWhitePoint","round","Math","rgb2css","_len","arguments","length","args","Array","_key","rgba","mode","substr","prevWhitePoint","cssColor","concat","slice","join"],"sources":["C:/Users/kavin/Desktop/Azure/Bit-Frontend/node_modules/chroma-js/src/io/css/rgb2css.js"],"sourcesContent":["import { unpack, last } from '../../utils/index.js';\nimport hsl2css from './hsl2css.js';\nimport rgb2hsl from '../hsl/rgb2hsl.js';\nimport lab2css from './lab2css.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lch2css from './lch2css.js';\nimport rgb2lch from '../lch/rgb2lch.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport oklab2css from './oklab2css.js';\nimport rgb2oklch from '../oklch/rgb2oklch.js';\nimport oklch2css from './oklch2css.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\nconst { round } = Math;\n\n/*\n * supported arguments:\n * - rgb2css(r,g,b)\n * - rgb2css(r,g,b,a)\n * - rgb2css([r,g,b], mode)\n * - rgb2css([r,g,b,a], mode)\n * - rgb2css({r,g,b,a}, mode)\n */\nconst rgb2css = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    let mode = last(args) || 'rgb';\n    if (mode.substr(0, 3) === 'hsl') {\n        return hsl2css(rgb2hsl(rgba), mode);\n    }\n    if (mode.substr(0, 3) === 'lab') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lab2css(rgb2lab(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 3) === 'lch') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lch2css(rgb2lch(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 5) === 'oklab') {\n        return oklab2css(rgb2oklab(rgba));\n    }\n    if (mode.substr(0, 5) === 'oklch') {\n        return oklch2css(rgb2oklch(rgba));\n    }\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n    if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {\n        rgba[3] = '/ ' + (rgba.length > 3 ? rgba[3] : 1);\n        mode = 'rgba';\n    }\n    return `${mode.substr(0, 3)}(${rgba.slice(0, mode === 'rgb' ? 3 : 4).join(' ')})`;\n};\n\nexport default rgb2css;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}